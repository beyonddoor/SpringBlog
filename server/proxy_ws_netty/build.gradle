buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.guardsquare:proguard-gradle:7.6.0'
    }
}

plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.4'
    id 'io.spring.dependency-management' version '1.1.6'

//    //    create a fat jar
//    id 'com.github.johnrengelman.shadow' version '7.1.2'
}

group = 'codefun'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

////create a fat jar
//shadowJar {
//    archiveBaseName.set('your-jar-name')
//    archiveVersion.set('0.0.1-SNAPSHOT')
//    archiveClassifier.set('')
//    manifest {
//        attributes 'Main-Class': 'codefun.ws_demo.WsApplication'
//    }
//}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
    google()
}

dependencies {
    implementation project(':util')
    implementation 'io.netty:netty-all:4.1.108.Final'
    implementation 'org.springframework.boot:spring-boot-starter'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
    useJUnitPlatform()
}


tasks.withType(JavaCompile) {
    options.compilerArgs << "-Xlint:deprecation" << "-Xlint:unchecked"
}

task proguard(type: proguard.gradle.ProGuardTask) {
    dependsOn jar
    injars 'build/libs/proxy_ws_netty-0.0.1-SNAPSHOT.jar'
    outjars 'build/libs/proxy_ws_netty-0.0.1-SNAPSHOT-min.jar'
    configuration 'src/main/resources/proguard-files.pro'
}

//jar {
//    dependsOn proguard
//    archiveClassifier.set('min')
//}